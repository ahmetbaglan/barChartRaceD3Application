{"version":3,"sources":["logo.svg","CongressionalDistrict.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CongressionalDistrict","d3","defer","await","error","brandData","setState","svg","select","this","refs","anchor","props","width","height","console","log","state","margin","barPadding","append","attrs","class","y","html","x","styles","year","forEach","d","value","lastValue","isNaN","colour","Math","random","yearSlice","filter","sort","a","b","slice","i","rank","domain","range","xAxis","scale","ticks","tickSize","tickFormat","transform","call","selectAll","classed","data","name","enter","fill","text","yearText","strokeWidth","parentNode","insertBefore","cloneNode","stroke","opacity","ticker","e","transition","duration","ease","bars","replace","top_n","exit","remove","labels","valueLabels","tween","t","textContent","stop","ref","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c01e30b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\nimport * as d3 from 'd3v4';\nimport {selection, select} from 'd3-selection';\nimport 'd3-selection-multi';\n\n\nclass CongressionalDistrict extends Component {\n  componentWillMount(){\n    d3.queue()\n    .defer(d3.csv, 'https://gist.githubusercontent.com/johnburnmurdoch/2e5712cce1e2a9407bf081a952b85bac/raw/08cf82f5e03c619f7da2700d1777da0b5247df18/INTERBRAND_brand_values_2000_2018_decimalised.csv')\n    .await((error, brandData) => {\n      this.setState({\n        brandData\n      })\n    })\n  }\n\n    componentDidUpdate() {\n      var tickDuration = 250;\n      const svg = select(this.refs.anchor),\n            { width, height } = this.props;\n      console.log(this)\n      var brandData = this.state.brandData;\n      console.log(brandData)\n      var endYear = 2018\n      var startYear = 1500\n      var top_n = 10;\n\n      var halo = function(text, strokeWidth) {\n        text.select(function() { return this.parentNode.insertBefore(this.cloneNode(true), this); })\n          .styles({\n            fill: '#ffffff',\n            stroke: '#ffffff',\n            'stroke-width': strokeWidth,\n            'stroke-linejoin': 'round',\n            opacity: 1\n          });\n      }\n      const margin = {\n        top: 80,\n        right: 0,\n        bottom: 5,\n        left: 0\n      };\n\n      var barPadding = (height-(margin.bottom+margin.top))/(top_n*5);\n\n      var title = svg.append('text');\n      title.attrs({\n          class: 'title',\n          y: 24\n        })\n        .html('18 years of Interbrandâ€™s Top Global Brands');\n\n\n      var subTitle = svg.append('text')\n        .attrs({\n          class: 'subTitle',\n          y: 55\n        })\n        .html('Brand value, $m');\n\n      var caption = svg.append('text')\n        .attrs({\n          class: 'caption',\n          x: width,\n          y: height-5\n        })\n        .styles({\n          'text-anchor': 'end'\n        })\n        .html('Source: Interbrand');\n\n      var year = 2000;\n      brandData.forEach(d => {\n        d.value = +d.value;\n        d.lastValue = +d.lastValue;\n        d.value = isNaN(d.value) ? 0 : d.value;\n        d.year = +d.year;\n        d.colour = d3.hsl(Math.random()*360,0.75,0.75);\n      });\n\n      var yearSlice = brandData.filter(d => d.year == year && !isNaN(d.value))\n        .sort((a,b) => b.value - a.value)\n        .slice(0,top_n);\n        yearSlice.forEach((d,i) => d.rank = i);\n\n      var x = d3.scaleLinear()\n        .domain([0, d3.max(yearSlice, d => d.value)])\n        .range([margin.left, width-margin.right-65]);\n\n      var y = d3.scaleLinear()\n        .domain([top_n, 0])\n        .range([height-margin.bottom, margin.top]);\n\n      var xAxis = d3.axisTop()\n        .scale(x)\n        .ticks(width > 500 ? 5:2)\n        .tickSize(-(height-margin.top-margin.bottom))\n        .tickFormat(d => d3.format(',')(d));\n\n      svg.append('g')\n        .attrs({\n          class: 'axis xAxis',\n          transform: `translate(0, ${margin.top})`\n        })\n        .call(xAxis)\n          .selectAll('.tick line')\n          .classed('origin', d => d == 0);\n\n      svg.selectAll('rect.bar')\n        .data(yearSlice, d => d.name)\n        .enter()\n        .append('rect')\n        .attrs({\n          class: 'bar',\n          x: x(0)+1,\n          width: d => x(d.value)-x(0)-1,\n          y: d => y(d.rank)+5,\n          height: y(1)-y(0)-barPadding\n        })\n        .styles({\n          fill: d => d.colour\n        });\n\n      svg.selectAll('text.label')\n        .data(yearSlice, d => d.name)\n        .enter()\n        .append('text')\n        .attrs({\n          class: 'label',\n          x: d => x(d.value)-8,\n          y: d => y(d.rank)+5+((y(1)-y(0))/2)+1,\n          'text-anchor': 'end'\n        })\n        .html(d => d.name);\n\n      svg.selectAll('text.valueLabel')\n        .data(yearSlice, d => d.name)\n        .enter()\n        .append('text')\n        .attrs({\n          class: 'valueLabel',\n          x: d => x(d.value)+5,\n          y: d => y(d.rank)+5+((y(1)-y(0))/2)+1,\n        })\n        .text(d => d3.format(',.0f')(d.lastValue));\n\n      var yearText = svg.append('text')\n        .attrs({\n          class: 'yearText',\n          x: width-margin.right,\n          y: height-25\n        })\n        .styles({\n          'text-anchor': 'end'\n        })\n        .html(~~year)\n        .call(halo, 10);\n\n      var ticker = d3.interval(e => {\n\n        yearSlice = brandData.filter(d => d.year == year && !isNaN(d.value))\n          .sort((a,b) => b.value - a.value)\n          .slice(0,top_n);\n\n        yearSlice.forEach((d,i) => d.rank = i);\n\n        x.domain([0, d3.max(yearSlice, d => d.value)]);\n\n        svg.select('.xAxis')\n          .transition()\n          .duration(tickDuration)\n          .ease(d3.easeLinear)\n          .call(xAxis);\n\n        var bars = svg.selectAll('.bar').data(yearSlice, d => d.name);\n\n        bars\n          .enter()\n          .append('rect')\n          .attrs({\n            class: d => `bar ${d.name.replace(/\\s/g,'_')}`,\n            x: x(0)+1,\n            width: d => x(d.value)-x(0)-1,\n            y: d => y(top_n+1)+5,\n            height: y(1)-y(0)-barPadding\n          })\n          .styles({\n            fill: d => d.colour\n          })\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              y: d => y(d.rank)+5\n            });\n\n        bars\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              width: d => x(d.value)-x(0)-1,\n              y: d => y(d.rank)+5\n            });\n\n        bars\n          .exit()\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              width: d => x(d.value)-x(0)-1,\n              y: d => y(top_n+1)+5\n            })\n            .remove();\n\n        var labels = svg.selectAll('.label').data(yearSlice, d => d.name);\n\n        labels\n          .enter()\n          .append('text')\n          .attrs({\n            class: 'label',\n            x: d => x(d.value)-8,\n            y: d => y(top_n+1)+5+((y(1)-y(0))/2),\n            'text-anchor': 'end'\n          })\n          .html(d => d.name)\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              y: d => y(d.rank)+5+((y(1)-y(0))/2)+1,\n            });\n\n        labels\n          .transition()\n          .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              x: d => x(d.value)-8,\n              y: d => y(d.rank)+5+((y(1)-y(0))/2)+1\n            });\n\n        labels\n          .exit()\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              x: d => x(d.value)-8,\n              y: d => y(top_n+1)+5\n            })\n            .remove();\n\n        var valueLabels = svg.selectAll('.valueLabel').data(yearSlice, d => d.name);\n\n        valueLabels\n          .enter()\n          .append('text')\n          .attrs({\n            class: 'valueLabel',\n            x: d => x(d.value)+5,\n            y: d => y(top_n+1)+5,\n          })\n          .text(d => d3.format(',.0f')(d.lastValue))\n          .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attrs({\n              y: d => y(d.rank)+5+((y(1)-y(0))/2)+1\n            });\n\n          valueLabels\n            .transition()\n              .duration(tickDuration)\n              .ease(d3.easeLinear)\n              .attrs({\n                x: d => x(d.value)+5,\n                y: d => y(d.rank)+5+((y(1)-y(0))/2)+1\n              })\n              .tween(\"text\", function(d) {\n                let i = d3.interpolateRound(d.lastValue, d.value);\n                return function(t) {\n                  this.textContent = d3.format(',')(i(t));\n                };\n              });\n\n          valueLabels\n            .exit()\n            .transition()\n              .duration(tickDuration)\n              .ease(d3.easeLinear)\n              .attrs({\n                x: d => x(d.value)+5,\n                y: d => y(top_n+1)+5\n              })\n                  .remove();\n\n              yearText.html(~~year);\n\n              if(year == 2018) ticker.stop();\n              year = d3.format('.1f')((+year) + 0.1);\n            },tickDuration);\n\n  }\n\n  render(){\n    console.log('lololo')\n\n    return <g ref=\"anchor\"/>\n  }\n}\n\nexport default CongressionalDistrict\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CongressionalDistrict from './CongressionalDistrict'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <svg width=\"960\" height=\"600\">\n         <CongressionalDistrict width={960} height={600}/>\n      </svg>\n      <svg width=\"480\" height=\"300\">\n         <CongressionalDistrict width={300} height={480}/>\n      </svg>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}